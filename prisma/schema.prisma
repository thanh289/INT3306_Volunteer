// Defines the database schema for all models in the application.

datasource db {
    provider = "mongodb"
    url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

// API generated is prisma.user
model User {
    id           String   @id @default(auto()) @map("_id") @db.ObjectId
    name         String?
    email        String   @unique
    passwordHash String
    imageUrl     String?
    createdAt    DateTime @default(now())
    updatedAt    DateTime @updatedAt

    // an user can registry multiple event
    registrations Registration[]
}

model Organization {
    id          String   @id @default(auto()) @map("_id") @db.ObjectId
    name        String
    email       String   @unique
    description String?
    imageUrl    String?
    websiteUrl  String?
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt

    // an organization can create multiple event
    events Event[]
}

enum EventCategory {
    ENVIRONMENT
    EDUCATION
    HEALTHCARE
    COMMUNITY
}

model Event {
    id            String        @id @default(auto()) @map("_id") @db.ObjectId
    title         String
    description   String
    location      String
    imageUrl      String?
    startDateTime DateTime
    endDateTime   DateTime
    maxAttendees  Int
    category      EventCategory @default(COMMUNITY)
    createdAt     DateTime      @default(now())
    updatedAt     DateTime      @updatedAt

    // this event belong to a organization
    organizationId String       @db.ObjectId
    organization   Organization @relation(fields: [organizationId], references: [id])

    // an event can has multiple user
    registrations Registration[]
}

model Registration {
    id          String   @id @default(auto()) @map("_id") @db.ObjectId
    createdAt   DateTime @default(now())
    isCompleted Boolean  @default(false)

    // Which user
    userId String @db.ObjectId
    user   User   @relation(fields: [userId], references: [id])

    // Which event
    eventId String @db.ObjectId
    event   Event  @relation(fields: [eventId], references: [id])

    // an user can only registry an event once
    @@unique([userId, eventId])
}
